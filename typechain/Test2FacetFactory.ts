/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Test2Facet } from "./Test2Facet";

export class Test2FacetFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<Test2Facet> {
    return super.deploy(overrides || {}) as Promise<Test2Facet>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Test2Facet {
    return super.attach(address) as Test2Facet;
  }
  connect(signer: Signer): Test2FacetFactory {
    return super.connect(signer) as Test2FacetFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Test2Facet {
    return new Contract(address, _abi, signerOrProvider) as Test2Facet;
  }
}

const _abi = [
  {
    inputs: [],
    name: "test1Func1",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052348015600f57600080fd5b5060898061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c806319e3b53314602d575b600080fd5b60336049565b6040518082815260200191505060405180910390f35b60006104d290509056fea2646970667358221220de3773f784600eb61251b30134645d2cee7efceceecbb3521ecb2878317251ae64736f6c63430007030033";
