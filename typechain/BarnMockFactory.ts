/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { BarnMock } from "./BarnMock";

export class BarnMockFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(rewards: string, overrides?: Overrides): Promise<BarnMock> {
    return super.deploy(rewards, overrides || {}) as Promise<BarnMock>;
  }
  getDeployTransaction(
    rewards: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(rewards, overrides || {});
  }
  attach(address: string): BarnMock {
    return super.attach(address) as BarnMock;
  }
  connect(signer: Signer): BarnMockFactory {
    return super.connect(signer) as BarnMockFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BarnMock {
    return new Contract(address, _abi, signerOrProvider) as BarnMock;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "rewards",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "callRegisterDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "callRegisterWithdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "r",
    outputs: [
      {
        internalType: "contract IRewards",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161035d38038061035d8339818101604052602081101561003357600080fd5b8101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506102c9806100946000396000f3fe608060405234801561001057600080fd5b50600436106100405760003560e01c8062aab862146100455780636c8ae38c146100935780638f1e6f54146100c7575b600080fd5b6100916004803603604081101561005b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610115565b005b61009b6101c2565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610113600480360360408110156100dd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506101e6565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663219dabeb83836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b1580156101a657600080fd5b505af11580156101ba573d6000803e3d6000fd5b505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636d8d36ba83836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561027757600080fd5b505af115801561028b573d6000803e3d6000fd5b50505050505056fea264697066735822122078d5d8d0d02cabf539749f0222c2995de27b329447cb31b43e09d751bdf2458864736f6c63430007030033";
